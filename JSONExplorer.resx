<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="excel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAZpJREFUOE+d
        k7tKA2EQhRc7xSdQLOw0K0h2k42m8A28JRYKGnM1iYVdGqsUVpHEywNYiDE3c1NB8BHUXqIItkHBQsUE
        hXHmv2zWdGbgY2bOnP9stcpQcnZA3fO89YKiKH2KeuAFe3YVWQP7CXYCd010qbHdBL14s2UWH0QAFzTs
        BN853bsVNb3wyAK0UzQyfHDXvGdoWR/T7AyaBfhQzp2A3DroCHVrkaaTGXuucW16JGaAnvdzCn7xlJep
        I1Sp22OLZg0oBEAvBsCBLOe3mJlq6Wqb3Uh/en0G99EKmx3CzwImDr0oBsFZCoKjFEKC8NH+FBF/yyiF
        2V1iBjjPwpyyAOeRHSdEiwkYTk7CaHoGmu8vLIRuDuYPWQLKEXBWImBQR76+W8xMJTX6IhXNUjMDjMoG
        p8oJVxPM3P5p4x419W7UtIcHuGpoQqhLrLtR57tRi+FOcL0TUI/BFELdVY9bunWWd+Q8jv44qBkMUPc9
        4L7YhOkuSGP6pZhlJ01g251vKPhXtSikF8ZSczf4RyqDyDhi+yf4Run/Be77OfxkhgO5AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="jsonExport.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAALpSURBVDhPXZNJTJNRFIVJiEtZuMAdCUs3Gm2QVqEV
        CoViJ4pt6U86QefWBAxhKoMWBQMUKVgGhTQMEcocitYN4AYTFrhABXFp4sYlJgqr431/CxJOcpMO73zv
        vPvuS7sor9cb8fl8f6ngdrtht9tRXV39hyricDgup5bxApD6RCKjzO/3Q6PRQJyXD5FQhNraOkxPz+Dw
        8DuWl1dgNpsZkEtZ/gM8Ho+MCtJCKcQSCYqkxSiVlaBMLodcXoYK7QMcHHzD/v4BnE4ng1Qx3xmAxWUL
        ZcUyyEuTJoVCyRu5SiM4rgoulxt7X75id/cTLBYL7+QBtHPESAsUChXUag2stmpsbGzi6Og35ubmftnt
        DnjcrB8e9PaFsL39EdFoFDU1NZFTwLFBb0Cl3giTycxH3dv7jKGhlz9ok+s6nS7c0NCIxsYmdHY+Qzg8
        iK2tD6yxxymAmyJZYbXaMDk5hc3NLQyPjEIsFltYTKFQeKO1tY039/T0or39CZaWllkC8hPA7XbB730I
        r9eHROI9+vsH0N39HFptuYgBSJeCnU8RCr3Aysoq6mof8f/TlSYBrKssXlNTM8bHJxAMBhGLLcJgMMiY
        22azXQ2FBjD26jXia3Ha2c5v5nK5kgAinXR0PEZXVzcCgTbU1zegj5oVDod3GKC5uWVnamoGq6tr6KUj
        VBqMMBo5NmTJHnAcF2tpCVDTInS+dv66WK2vv2WJfs7OxrAWj2NxYRHa8goo7ivAEcBkMsV4ACmLjWsk
        MoKJiSjYjeh0ev6s8wsLSLxLYHR0DBqVGoUFhSihAWNzk52dfe0UkCaVSn2smTNvZhEeHIKsqISmsQgF
        9wqQdzcfd0Qi5N7OhUQs4d+HUqkMkC39DEDKYBB2NZGRYf4m9JQkR5ADwS0BRLlCqCkBeysqlYqZrzDT
        eQBTBpWA44zzTqfjxOv1wOf38SaKfEwPaT4zMzOf1vBmpouAU2VR3aQSnCv2nf2eTnUmAGn/AIv83gDg
        Esb2AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="saveJson.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="saveExcel.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>116, 17</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>